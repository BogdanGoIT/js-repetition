/*
 * –§—É–Ω–∫—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.
 *
 * –í–æ–∑–≤—Ä–∞—â–∞–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–æ –≤—Ä–µ–º—è –≤—ã–∑–æ–≤–∞ –±—É–¥–µ—Ç –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø
 * –∫–æ –≤—Å–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º (–æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏)
 * —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ (—Ç–æ–π –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –µ—ë –≤–µ—Ä–Ω—É–ª–∏),
 * —ç—Ç–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è ¬´–∑–∞–º—ã–∫–∞–Ω–∏–µ¬ª.
 */

const fnA = function (parameter) {
    const innerVariable = '–∑–Ω–∞—á–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ fnA';

    const innerFunction = function(param){
        console.log(parameter);
        console.log(innerVariable);
        console.log('–≠—Ç–æ –≤—ã–∑–æ–≤ innerFunction')
    }

    // —Ñ-—Ü–∏—è –∫–æ–≥–¥–∞ –º—ã –µ—ë –≤–æ–∑–≤—Ä–∞—â–∞–µ–º, –æ–Ω–∞ –∑–∞–º—ã–∫–∞–µ—Ç—Å—è –Ω–∞ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ fnA
    return innerFunction;
}

// // 1 –∫–æ–≥–¥–∞ –≤—ã–∑—ã–≤–∞—é fnA —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –µ—ë —Ä–∞–±–æ—Ç—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Ñ-—Ü–∏—è innerFunction
// // 2 —è –º–æ–≥—É –ø–µ—Ä–µ–¥–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä, –∏ —è –±—É–¥—É –ø–æ–ª—É—á–∞—Ç—å –∫ –Ω–µ–º—É –¥–æ—Å—Ç—É–ø –≤ fnB
// const fnB = fnA(555);

// // innerFunction –±—É–¥–µ—Ç –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º, –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∞ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –≤ –Ω–µ —Ç–µ–ª–∞ fnA
// fnB();

// // –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π fnB –ª–µ–∂–∏—Ç —Ñ-—Ü–∏—è innerFunction
// console.log(fnB);

/*
 * –ü–æ–≤–∞—Ä—ë–Ω–æ–∫
 */
const makeDish = function (sheffName, dish) {
    console.log(`${sheffName} –≥–æ—Ç–æ–≤–∏—Ç ${dish}`);
};

// makeDish('Mango', '–ø–∏—Ä–æ–∂–æ–∫');
// makeDish('Mango', '–æ–º–ª–µ—Ç');
// makeDish('Mango', '—á–∞–π');

// makeDish('Poly', '–∫–æ—Ç–ª–µ—Ç—ã');
// makeDish('Poly', '—Å—É–ø–∏–∫');
// makeDish('Poly', '–∫–æ—Ñ–µ');

// —Ñ-—Ü–∏—è —Å–¥–µ–ª–∞–π —à–µ—Ñ–∞, –±—É–¥–µ–º –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏–º—è —à–µ—Ñ–∞
const makeSheff = function(name){
    const innverVar = 555;
    const message = 'hello';

    const makeDish = function (dish) {
        console.log(message);
        console.log(innverVar);
        console.log(`${name} –≥–æ—Ç–æ–≤–∏—Ç ${dish}`);
    };

    // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ-—Ü–∏—é —Å–¥–µ–ª–∞–π –±–ª—é–¥–æ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—É name
    return makeDish
}

// // –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é mango —Å–¥–µ–ª–∞–π –º–Ω–µ —à–µ—Ñ–∞ 'Mango' –∑–∞–ø–∏—Å–∞–ª—Å—è –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä name 
// const mango = makeSheff('Mango');

// // [[Scopes]] // Closure (makeSheff) {name: 'Mango'}
// console.dir(mango);

// const poly = makeSheff('Poly');

// // // [[Scopes]] // Closure (makeSheff) {name: 'Poly'}
// console.dir(poly);

// // –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π mango —Å–µ–π—á–∞—Å —Ñ-—Ü–∏—è makeDish, –∏ –µ—Å–ª–∏ —ç—Ç—É —Ñ-—Ü–∏—é –≤—ã–∑–≤–∞—Ç—å —Ç–æ –æ–Ω–∞ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ name
// console.log(mango);

// // –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ-—Ü–∏—è makeDish, –ø–æ—ç—Ç–æ–º—É –∫–æ—Ç–ª–µ—Ç—ã –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä dish, –∞ name –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω –≤ makeSheff('Mango')
// mango('–∫–æ—Ç–ª–µ—Ç—ã');
// mango('–ø–∏—Ä–æ–∂–æ–∫');

// poly('—á–∞–π');
// poly('–æ–º–ª–µ—Ç');

// –ó–∞–º—ã–∫–∞–Ω–∏–µ - –µ—Å–ª–∏ –≤—ã –æ–¥–Ω—É —Ñ-—Ü–∏—é –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç–µ –∏–∑ –¥—Ä—É–≥–æ–π —Ñ-—Ü–∏–∏, —Ç–æ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω–æ–π —Ñ-—Ü–∏–∏ –æ–Ω–∞ –ø–æ–ª—É—á–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π, –≥–¥–µ –± –≤—ã –µ—ë –Ω–µ –≤—ã–∑–≤–∞–ª–∏



/*
 * –û–∫—Ä—É–≥–ª—è—Ç–æ—Ä ü§∑‚Äç‚ôÇÔ∏è
 */

const floatingPoint = 3.456789;
const someInt = Math.round(floatingPoint); // 3
const withDecimals = Number(floatingPoint.toFixed(2)); // 3.46

// 1 –º—ã –≤—ã–∑—ã–≤–∞–µ–º —Ñ-—Ü–∏—é rounder
const rounder = function(places){

    // 2 –æ–Ω–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å–≤–æ–µ–π —Ä–æ–±–æ—Ç—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç—Ç—É —Ñ-—Ü–∏—é
    return function(number){
        return Number(number.toFixed(places));
    }
}

// // 3 –Ω–æ –ø–µ—Ä–µ–¥ —ç—Ç–∏–º 2 –∏–ª–∏ 3 –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä places
// const rounder2 = rounder(2);
// const rounder3 = rounder(3);

// // 4 –∏ –¥–ª—è —ç—Ç–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Ñ-—Ü–∏–∏ –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è places –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –∑–∞–º—ã–∫–∞–Ω–∏–µ
// console.dir(rounder2);

// console.log(rounder2(3.4567));
// console.log(rounder3(3.4567));
// console.log(rounder2(5.1234));
// console.log(rounder3(3.4567));


/*
 * –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ - —Å–∫—Ä—ã—Ç–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏, –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
 */

const salaryManagerFactory = function (employeeName, baseSalary = 0) {
    let salary = baseSalary;

    return {
        raise(amount){
            if(amount > 1000){
                return '—Ç—ã –æ—Ñ–∏–≥–µ–ª?';
            }
            salary += amount
        },
        lower(amount){
            salary -= amount
        },
        current(){
            return `–¢–µ–∫—É—â–∞—è –∑–∞—Ä–ø–∞–ª–∞—Ç–∞ ${employeeName} - ${salary}`;
        }
    }
}

// 1 salaryManager - —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –æ–±—å–µ–∫—Ç, –º—ã –≤—ã–∑—ã–≤–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—å–µ–∫—Ç, –≤ —ç—Ç–æ–º –æ–±—å–µ–∫—Ç–µ –µ—Å—Ç—å –º–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–º—ã–∫–∞—é—Ç—Å—è –Ω–∞ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ salaryManagerFactory –∏ –ø–æ–ª—É—á–∞—Ç –¥–æ—Å—Ç—É–ø –∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π salary
const salaryManager = salaryManagerFactory("Mango", 5000);

// 2 –ø–æ—ç—Ç–æ–º—É –º—ã –º–æ–∂–µ–º –≤–Ω—É—Ç—Ä–∏ –Ω–∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –æ–Ω–∏ –±—É–¥—É—Ç –∫ –Ω–∏–º –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Å—Ç—É–ø, –¥–∞–∂–µ –µ—Å–ª–∏ –±—É–¥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –Ω–µ –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Ñ-—Ü–∏–∏
console.log(salaryManager.current());

console.log(salaryManager.raise(1000));

console.log(salaryManager.current());



// // 1 –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ-—Ü–∏–∏ —è –ø–æ–ª—É—á—É –æ–±—å–µ–∫—Ç –æ–±—Ä–∞—Ç–Ω–æ
// const myLibFactory = function(){
//     let value = 0;

//     const add = function(num){
//         value += num;
//     }

//     return {
//         add: add,
//         getValue(){
//             return value;
//         }
//     }
// }

// // 2 –≤ —ç—Ç–æ–º –æ–±—å–µ–∫—Ç–µ –Ω–µ –±—É–¥–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π value –Ω–µ –±—É–¥–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ value
// const myLib = myLibFactory();

// // —Ñ-—Ü–∏—è –∑–∞–º–∫–Ω—É–ª–∞—Å—å –Ω–∞ value –∏ –Ω–∏–∫—Ç–æ —Ç—É–¥–∞ –¥–æ—Å—Ç—É–ø –Ω–µ –ø–æ–ª—É—á–∏—Ç
// console.dir(myLib.getValue);

// console.log(myLib);
// console.log(myLib.getValue());
// myLib.add(10);
// console.log(myLib.getValue())



// const myLib = {
//     value123: 0,
//     add(num){
//         this.value123 += num;
//     },
//     getValue(){
//         return this.value123;
//     }
// }

// myLib.add(5);

// console.log(myLib.getValue())


// console.log(myLib)

// // –ø—Ä–æ–±–ª–µ–º–∞ —á—Ç–æ –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–π—Å—Ç–≤—É value –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –ª—é–±–æ–π –Ω–∞ –ø—Ä—è–º—É—é
// console.log(myLib.value123321)
